---
# kube2iam: allow pods to use AWS IAM roles
# GitHub repo: https://github.com/jtblin/kube2iam

apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: kube-system
  name: kube2iam
  labels:
    app: kube2iam
spec:
  selector:
    matchLabels:
      name: kube2iam
  template:
    metadata:
      labels:
        name: kube2iam
    spec:
      terminationGracePeriodSeconds: 3
      serviceAccountName: kube2iam
      hostNetwork: true
      containers:
      - image: jtblin/kube2iam:0.10.4
        name: kube2iam
        args:
        - "--base-role-arn=arn:aws:iam::274712788788:role/"
        - "--host-ip=127.0.0.1"
        - "--node=$(NODE_NAME)"
        - "--iptables=true"
        - "--host-interface=eni+"
        - "--debug"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName

        ports:
        - containerPort: 8181
          hostPort: 8181
          name: http
        resources:
          requests:
            cpu: 10m
            memory: 40Mi
          limits:
            memory: 50Mi
        securityContext:
          privileged: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube2iam
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube2iam
rules:
- apiGroups: [""]
  resources: ["namespaces","pods"]
  verbs: ["get","watch","list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube2iam
subjects:
- kind: ServiceAccount
  name: kube2iam
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kube2iam
  apiGroup: rbac.authorization.k8s.io